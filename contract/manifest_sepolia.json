{
  "world": {
    "class_hash": "0x13d92333361bb7049c1232c0a5404e2c19082ededc3a73d75cb33fa952adec7",
    "address": "0x5bac0f7112d5e689ce134dd5f9ad1fcd1a2b61fc1adc21adbfade3d0511a4",
    "seed": "liveproduction001",
    "name": "Dojo starter",
    "entrypoints": [
      "uuid",
      "set_metadata",
      "register_namespace",
      "register_event",
      "register_model",
      "register_contract",
      "register_library",
      "init_contract",
      "upgrade_event",
      "upgrade_model",
      "upgrade_contract",
      "emit_event",
      "emit_events",
      "set_entity",
      "set_entities",
      "delete_entity",
      "delete_entities",
      "grant_owner",
      "revoke_owner",
      "grant_writer",
      "revoke_writer",
      "upgrade"
    ],
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          },
          {
            "name": "Library",
            "type": "(core::starknet::class_hash::ClassHash, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "metadata_hash",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::array::Span::<core::felt252>>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::array::Span::<core::felt252>>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::model::definition::ModelIndex>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::model::definition::ModelIndex>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_library",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              },
              {
                "name": "name",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "version",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_events",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "owners_count",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u64"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::LibraryRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "LibraryRegistered",
            "type": "dojo::world::world_contract::world::LibraryRegistered",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0x6d544d067d25964c0777cab25ab518f77d076ed1a4a180ab4c80cbdf648fad4",
      "class_hash": "0x253d4c7eb8c0900031828bc6ef92d6207a2815c91549f85c9d5f213d9c06f96",
      "abi": [
        {
          "type": "impl",
          "name": "game__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "game__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "GameImpl",
          "interface_name": "blockopoly::systems::game::IGame"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::game_model::GameStatus",
          "variants": [
            {
              "name": "Pending",
              "type": "()"
            },
            {
              "name": "Ongoing",
              "type": "()"
            },
            {
              "name": "Ended",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::game_model::GameType",
          "variants": [
            {
              "name": "PublicGame",
              "type": "()"
            },
            {
              "name": "PrivateGame",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::game_model::Game",
          "members": [
            {
              "name": "id",
              "type": "core::integer::u256"
            },
            {
              "name": "created_by",
              "type": "core::felt252"
            },
            {
              "name": "is_initialised",
              "type": "core::bool"
            },
            {
              "name": "status",
              "type": "blockopoly::model::game_model::GameStatus"
            },
            {
              "name": "mode",
              "type": "blockopoly::model::game_model::GameType"
            },
            {
              "name": "ready_to_start",
              "type": "core::bool"
            },
            {
              "name": "winner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "next_player",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "number_of_players",
              "type": "core::integer::u8"
            },
            {
              "name": "rolls_count",
              "type": "core::integer::u256"
            },
            {
              "name": "rolls_times",
              "type": "core::integer::u256"
            },
            {
              "name": "dice_face",
              "type": "core::integer::u8"
            },
            {
              "name": "player_chance",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "has_thrown_dice",
              "type": "core::bool"
            },
            {
              "name": "game_condition",
              "type": "core::array::Array::<core::integer::u32>"
            },
            {
              "name": "hat",
              "type": "core::felt252"
            },
            {
              "name": "car",
              "type": "core::felt252"
            },
            {
              "name": "dog",
              "type": "core::felt252"
            },
            {
              "name": "thimble",
              "type": "core::felt252"
            },
            {
              "name": "iron",
              "type": "core::felt252"
            },
            {
              "name": "battleship",
              "type": "core::felt252"
            },
            {
              "name": "boot",
              "type": "core::felt252"
            },
            {
              "name": "wheelbarrow",
              "type": "core::felt252"
            },
            {
              "name": "player_hat",
              "type": "core::felt252"
            },
            {
              "name": "player_car",
              "type": "core::felt252"
            },
            {
              "name": "player_dog",
              "type": "core::felt252"
            },
            {
              "name": "player_thimble",
              "type": "core::felt252"
            },
            {
              "name": "player_iron",
              "type": "core::felt252"
            },
            {
              "name": "player_battleship",
              "type": "core::felt252"
            },
            {
              "name": "player_boot",
              "type": "core::felt252"
            },
            {
              "name": "player_wheelbarrow",
              "type": "core::felt252"
            },
            {
              "name": "players_joined",
              "type": "core::integer::u8"
            },
            {
              "name": "game_players",
              "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
            },
            {
              "name": "chance",
              "type": "core::array::Array::<core::byte_array::ByteArray>"
            },
            {
              "name": "community",
              "type": "core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::game_player_model::PlayerSymbol",
          "variants": [
            {
              "name": "Hat",
              "type": "()"
            },
            {
              "name": "Car",
              "type": "()"
            },
            {
              "name": "Dog",
              "type": "()"
            },
            {
              "name": "Thimble",
              "type": "()"
            },
            {
              "name": "Iron",
              "type": "()"
            },
            {
              "name": "Battleship",
              "type": "()"
            },
            {
              "name": "Boot",
              "type": "()"
            },
            {
              "name": "Wheelbarrow",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::game_player_model::GamePlayer",
          "members": [
            {
              "name": "address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "game_id",
              "type": "core::integer::u256"
            },
            {
              "name": "username",
              "type": "core::felt252"
            },
            {
              "name": "player_symbol",
              "type": "blockopoly::model::game_player_model::PlayerSymbol"
            },
            {
              "name": "is_next",
              "type": "core::bool"
            },
            {
              "name": "dice_rolled",
              "type": "core::integer::u8"
            },
            {
              "name": "position",
              "type": "core::integer::u8"
            },
            {
              "name": "jailed",
              "type": "core::bool"
            },
            {
              "name": "balance",
              "type": "core::integer::u256"
            },
            {
              "name": "properties_owned",
              "type": "core::array::Array::<core::integer::u8>"
            },
            {
              "name": "chance_jail_card",
              "type": "core::bool"
            },
            {
              "name": "comm_free_card",
              "type": "core::bool"
            },
            {
              "name": "total_houses_owned",
              "type": "core::integer::u8"
            },
            {
              "name": "total_hotels_owned",
              "type": "core::integer::u8"
            },
            {
              "name": "no_of_utilities",
              "type": "core::integer::u8"
            },
            {
              "name": "no_of_railways",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section1",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section2",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section3",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section4",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section5",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section6",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section7",
              "type": "core::integer::u8"
            },
            {
              "name": "no_section8",
              "type": "core::integer::u8"
            },
            {
              "name": "is_bankrupt",
              "type": "core::bool"
            },
            {
              "name": "is_active",
              "type": "core::bool"
            },
            {
              "name": "jail_turns",
              "type": "core::integer::u8"
            },
            {
              "name": "strikes",
              "type": "core::integer::u8"
            },
            {
              "name": "paid_rent",
              "type": "core::bool"
            },
            {
              "name": "joined",
              "type": "core::bool"
            },
            {
              "name": "rolled_dice",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockopoly::systems::game::IGame",
          "items": [
            {
              "type": "function",
              "name": "create_game",
              "inputs": [
                {
                  "name": "game_type",
                  "type": "core::integer::u8"
                },
                {
                  "name": "player_symbol",
                  "type": "core::integer::u8"
                },
                {
                  "name": "number_of_players",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "join_game",
              "inputs": [
                {
                  "name": "player_symbol",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "start_game",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "end_game",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "leave_game",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "retrieve_game",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::game_model::Game"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recepient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_game_player",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::game_player_model::GamePlayer"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_game_player_balance",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "last_game",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_player_networth",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockopoly::systems::game::game::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockopoly-game",
      "selector": "0x43ee190386a00af4aea2af7df69b6beea95756808d4ea77b4afcf524daf2830",
      "systems": [
        "create_game",
        "join_game",
        "start_game",
        "end_game",
        "leave_game",
        "mint",
        "get_player_networth",
        "upgrade"
      ]
    },
    {
      "address": "0x1a99e03c231a6b77588e5fc0a58a01944a40d2b3be311421e631c7f98975f5f",
      "class_hash": "0x1b776b371930826c270bb2fba2a6f26141fbf2e665956f7c8c61adba95519d3",
      "abi": [
        {
          "type": "impl",
          "name": "movement__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "movement__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "MovementImpl",
          "interface_name": "blockopoly::systems::movement::IMovement"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockopoly::systems::movement::IMovement",
          "items": [
            {
              "type": "function",
              "name": "move_player",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "steps",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "pay_jail_fine",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "use_getout_of_jail_chance",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "use_getout_of_jail_community_chest",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "current_player",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "current_playername",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "process_community_chest_card",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "card",
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "process_chance_card",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "card",
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "pay_tax",
              "inputs": [
                {
                  "name": "tax_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockopoly::systems::movement::movement::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockopoly-movement",
      "selector": "0x33ee5250a54a2d9532a74c107d8923a50c9dc6491a8226e49140cb0f8cf6e1b",
      "systems": [
        "move_player",
        "pay_jail_fine",
        "use_getout_of_jail_chance",
        "use_getout_of_jail_community_chest",
        "process_community_chest_card",
        "process_chance_card",
        "pay_tax",
        "upgrade"
      ]
    },
    {
      "address": "0xbbda0d18303e1439ca7507e404005f018da91cf5bcc0e7667de87650e36522",
      "class_hash": "0x5c293b9519284310a34dc395289b68bf291e466fdb6c8b1a5e76d81ada41caa",
      "abi": [
        {
          "type": "impl",
          "name": "player__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "player__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ActionsImpl",
          "interface_name": "blockopoly::systems::player::IActions"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::player_model::Player",
          "members": [
            {
              "name": "address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "username",
              "type": "core::felt252"
            },
            {
              "name": "is_registered",
              "type": "core::bool"
            },
            {
              "name": "balance",
              "type": "core::integer::u256"
            },
            {
              "name": "last_game",
              "type": "core::integer::u256"
            },
            {
              "name": "active",
              "type": "core::bool"
            },
            {
              "name": "total_games_played",
              "type": "core::integer::u256"
            },
            {
              "name": "total_games_completed",
              "type": "core::integer::u256"
            },
            {
              "name": "total_games_won",
              "type": "core::integer::u256"
            },
            {
              "name": "created_at",
              "type": "core::integer::u64"
            },
            {
              "name": "updated_at",
              "type": "core::integer::u64"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockopoly::systems::player::IActions",
          "items": [
            {
              "type": "function",
              "name": "register_new_player",
              "inputs": [
                {
                  "name": "username",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "is_registered",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_username_from_address",
              "inputs": [
                {
                  "name": "address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "retrieve_player",
              "inputs": [
                {
                  "name": "addr",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::player_model::Player"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockopoly::systems::player::player::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockopoly-player",
      "selector": "0x282975e9fdae3c547201685759a2f748afd4f833d30450838902f2f149a55c1",
      "systems": [
        "register_new_player",
        "upgrade"
      ]
    },
    {
      "address": "0x302811b2466e16c762c6d5ab4052587fd7d55f8352275bb83669f8bf6320425",
      "class_hash": "0xbfc9ea7ea08f4d660e3d603fd9e3323207713fdb1e1b68114523b363a8a2ef",
      "abi": [
        {
          "type": "impl",
          "name": "property__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "property__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "PropertysImpl",
          "interface_name": "blockopoly::systems::property::IProperty"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::game_model::GameStatus",
          "variants": [
            {
              "name": "Pending",
              "type": "()"
            },
            {
              "name": "Ongoing",
              "type": "()"
            },
            {
              "name": "Ended",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::game_model::GameType",
          "variants": [
            {
              "name": "PublicGame",
              "type": "()"
            },
            {
              "name": "PrivateGame",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::game_model::Game",
          "members": [
            {
              "name": "id",
              "type": "core::integer::u256"
            },
            {
              "name": "created_by",
              "type": "core::felt252"
            },
            {
              "name": "is_initialised",
              "type": "core::bool"
            },
            {
              "name": "status",
              "type": "blockopoly::model::game_model::GameStatus"
            },
            {
              "name": "mode",
              "type": "blockopoly::model::game_model::GameType"
            },
            {
              "name": "ready_to_start",
              "type": "core::bool"
            },
            {
              "name": "winner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "next_player",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "number_of_players",
              "type": "core::integer::u8"
            },
            {
              "name": "rolls_count",
              "type": "core::integer::u256"
            },
            {
              "name": "rolls_times",
              "type": "core::integer::u256"
            },
            {
              "name": "dice_face",
              "type": "core::integer::u8"
            },
            {
              "name": "player_chance",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "has_thrown_dice",
              "type": "core::bool"
            },
            {
              "name": "game_condition",
              "type": "core::array::Array::<core::integer::u32>"
            },
            {
              "name": "hat",
              "type": "core::felt252"
            },
            {
              "name": "car",
              "type": "core::felt252"
            },
            {
              "name": "dog",
              "type": "core::felt252"
            },
            {
              "name": "thimble",
              "type": "core::felt252"
            },
            {
              "name": "iron",
              "type": "core::felt252"
            },
            {
              "name": "battleship",
              "type": "core::felt252"
            },
            {
              "name": "boot",
              "type": "core::felt252"
            },
            {
              "name": "wheelbarrow",
              "type": "core::felt252"
            },
            {
              "name": "player_hat",
              "type": "core::felt252"
            },
            {
              "name": "player_car",
              "type": "core::felt252"
            },
            {
              "name": "player_dog",
              "type": "core::felt252"
            },
            {
              "name": "player_thimble",
              "type": "core::felt252"
            },
            {
              "name": "player_iron",
              "type": "core::felt252"
            },
            {
              "name": "player_battleship",
              "type": "core::felt252"
            },
            {
              "name": "player_boot",
              "type": "core::felt252"
            },
            {
              "name": "player_wheelbarrow",
              "type": "core::felt252"
            },
            {
              "name": "players_joined",
              "type": "core::integer::u8"
            },
            {
              "name": "game_players",
              "type": "core::array::Array::<core::starknet::contract_address::ContractAddress>"
            },
            {
              "name": "chance",
              "type": "core::array::Array::<core::byte_array::ByteArray>"
            },
            {
              "name": "community",
              "type": "core::array::Array::<core::byte_array::ByteArray>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::property_model::PropertyType",
          "variants": [
            {
              "name": "Go",
              "type": "()"
            },
            {
              "name": "Chance",
              "type": "()"
            },
            {
              "name": "CommunityChest",
              "type": "()"
            },
            {
              "name": "Jail",
              "type": "()"
            },
            {
              "name": "Utility",
              "type": "()"
            },
            {
              "name": "RailRoad",
              "type": "()"
            },
            {
              "name": "Tax",
              "type": "()"
            },
            {
              "name": "FreeParking",
              "type": "()"
            },
            {
              "name": "Property",
              "type": "()"
            },
            {
              "name": "VisitingJail",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::property_model::Property",
          "members": [
            {
              "name": "id",
              "type": "core::integer::u8"
            },
            {
              "name": "game_id",
              "type": "core::integer::u256"
            },
            {
              "name": "name",
              "type": "core::felt252"
            },
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "property_type",
              "type": "blockopoly::model::property_model::PropertyType"
            },
            {
              "name": "cost_of_property",
              "type": "core::integer::u256"
            },
            {
              "name": "property_level",
              "type": "core::integer::u8"
            },
            {
              "name": "rent_site_only",
              "type": "core::integer::u256"
            },
            {
              "name": "rent_one_house",
              "type": "core::integer::u256"
            },
            {
              "name": "rent_two_houses",
              "type": "core::integer::u256"
            },
            {
              "name": "rent_three_houses",
              "type": "core::integer::u256"
            },
            {
              "name": "rent_four_houses",
              "type": "core::integer::u256"
            },
            {
              "name": "cost_of_house",
              "type": "core::integer::u256"
            },
            {
              "name": "rent_hotel",
              "type": "core::integer::u256"
            },
            {
              "name": "is_mortgaged",
              "type": "core::bool"
            },
            {
              "name": "group_id",
              "type": "core::integer::u8"
            },
            {
              "name": "for_sale",
              "type": "core::bool"
            },
            {
              "name": "development",
              "type": "core::integer::u8"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockopoly::systems::property::IProperty",
          "items": [
            {
              "type": "function",
              "name": "buy_property",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "mortgage_property",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "unmortgage_property",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "pay_rent",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "buy_house_or_hotel",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "finish_turn",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::game_model::Game"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "sell_house_or_hotel",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_property",
              "inputs": [
                {
                  "name": "property_id",
                  "type": "core::integer::u8"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::property_model::Property"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockopoly::systems::property::property::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockopoly-property",
      "selector": "0x128c11653919fd7cc742a63735cfdfd0b6d8221ab61b4adfba33376a7a78d7b",
      "systems": [
        "buy_property",
        "mortgage_property",
        "unmortgage_property",
        "pay_rent",
        "buy_house_or_hotel",
        "finish_turn",
        "sell_house_or_hotel",
        "upgrade"
      ]
    },
    {
      "address": "0x558a16c1db3897b263c9670971ada00e0ae3fc955387fe899c34b60ad1d4324",
      "class_hash": "0x6cd7fe235d31a1d17415074521fb0b16a0e733b7e8537a9edcea2f4865eee46",
      "abi": [
        {
          "type": "impl",
          "name": "trade__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "trade__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TradeImpl",
          "interface_name": "blockopoly::systems::trade::ITrade"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::property_model::TradeOffer",
          "variants": [
            {
              "name": "PropertyForProperty",
              "type": "()"
            },
            {
              "name": "PropertyForCash",
              "type": "()"
            },
            {
              "name": "CashForProperty",
              "type": "()"
            },
            {
              "name": "CashPlusPropertyForProperty",
              "type": "()"
            },
            {
              "name": "PropertyForCashPlusProperty",
              "type": "()"
            },
            {
              "name": "CashForChanceJailCard",
              "type": "()"
            },
            {
              "name": "CashForCommunityJailCard",
              "type": "()"
            },
            {
              "name": "CommunityJailCardForCash",
              "type": "()"
            },
            {
              "name": "ChanceJailCardForCash",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "blockopoly::model::property_model::TradeStatus",
          "variants": [
            {
              "name": "Accepted",
              "type": "()"
            },
            {
              "name": "Rejected",
              "type": "()"
            },
            {
              "name": "Pending",
              "type": "()"
            },
            {
              "name": "Countered",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "blockopoly::model::property_model::TradeOfferDetails",
          "members": [
            {
              "name": "id",
              "type": "core::integer::u256"
            },
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "game_id",
              "type": "core::integer::u256"
            },
            {
              "name": "offered_property_ids",
              "type": "core::array::Array::<core::integer::u8>"
            },
            {
              "name": "requested_property_ids",
              "type": "core::array::Array::<core::integer::u8>"
            },
            {
              "name": "cash_offer",
              "type": "core::integer::u256"
            },
            {
              "name": "cash_request",
              "type": "core::integer::u256"
            },
            {
              "name": "trade_type",
              "type": "blockopoly::model::property_model::TradeOffer"
            },
            {
              "name": "status",
              "type": "blockopoly::model::property_model::TradeStatus"
            },
            {
              "name": "is_countered",
              "type": "core::bool"
            },
            {
              "name": "approve_counter",
              "type": "core::bool"
            }
          ]
        },
        {
          "type": "interface",
          "name": "blockopoly::systems::trade::ITrade",
          "items": [
            {
              "type": "function",
              "name": "offer_trade",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "offered_property_ids",
                  "type": "core::array::Array::<core::integer::u8>"
                },
                {
                  "name": "requested_property_ids",
                  "type": "core::array::Array::<core::integer::u8>"
                },
                {
                  "name": "cash_offer",
                  "type": "core::integer::u256"
                },
                {
                  "name": "cash_request",
                  "type": "core::integer::u256"
                },
                {
                  "name": "trade_type",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "accept_trade",
              "inputs": [
                {
                  "name": "trade_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reject_trade",
              "inputs": [
                {
                  "name": "trade_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "counter_trade",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "original_offer_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "offered_property_ids",
                  "type": "core::array::Array::<core::integer::u8>"
                },
                {
                  "name": "requested_property_ids",
                  "type": "core::array::Array::<core::integer::u8>"
                },
                {
                  "name": "cash_offer",
                  "type": "core::integer::u256"
                },
                {
                  "name": "cash_request",
                  "type": "core::integer::u256"
                },
                {
                  "name": "trade_type",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve_counter_trade",
              "inputs": [
                {
                  "name": "trade_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_trade",
              "inputs": [
                {
                  "name": "trade_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "blockopoly::model::property_model::TradeOfferDetails"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "blockopoly::systems::trade::trade::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "blockopoly-trade",
      "selector": "0xe6198a4380c43fa0df4ab8d6a9c5ede9fbb6b4892194babf2f92010efcbef5",
      "systems": [
        "offer_trade",
        "accept_trade",
        "reject_trade",
        "counter_trade",
        "approve_counter_trade",
        "upgrade"
      ]
    }
  ],
  "libraries": [],
  "models": [
    {
      "members": [],
      "class_hash": "0x670a01ef66d0f9244cd9dfaec0cd88fee4337b8ed7f4e9e05f04cc39716293d",
      "tag": "blockopoly-AddressToUsername",
      "selector": "0x3c4db2743446e9581c700d96d99af60182ee1fd61d5d12ea3b4f2e30b9fc2d6"
    },
    {
      "members": [],
      "class_hash": "0x5d102773ee9889a028c722f7765dcbab1dcbbf6e7f38624fa1019b47b39e87",
      "tag": "blockopoly-Game",
      "selector": "0x26ca60dabb303ce67bad66e6378f7688c717e12e326856a5716457729cb81a9"
    },
    {
      "members": [],
      "class_hash": "0x1191debdc090cfbe5e0f12d5e1328adc321a3ad647ccc27c3e006a8c82f346d",
      "tag": "blockopoly-GameCounter",
      "selector": "0x8864cf8a6bf38da0084bd66cabade3266bd56e2574b682f500564fd03bce3e"
    },
    {
      "members": [],
      "class_hash": "0x17e9a1dc76ffe181231b4395a3286fee556241b816f73016f01528e93d50173",
      "tag": "blockopoly-GamePlayer",
      "selector": "0x2048a0e5df9a34115f15e73141a2775346e2d23185045d77f408d24be71074"
    },
    {
      "members": [],
      "class_hash": "0x4449b26e563a8b2ec34a4865c6171d2dbeef32477c168583f196d3e89572ab8",
      "tag": "blockopoly-IdToProperty",
      "selector": "0x2e444baf07e97aa5e272c7ee6b83cd5911ce8a4129c39d8e1069ca4c01ab60d"
    },
    {
      "members": [],
      "class_hash": "0x53485331cc9501b254da262f57669ef14433d23503196720d6c41533400c05d",
      "tag": "blockopoly-IsRegistered",
      "selector": "0x78a13e4ed51902e443859e5a1dcc7149450c44beb3da53075d65e9f9701a313"
    },
    {
      "members": [],
      "class_hash": "0x7852d1ece28498df03809751b53d0dfd348464e7fdc99191f58e1f26725e9a1",
      "tag": "blockopoly-Player",
      "selector": "0x550665a3c41e8f6f594fc23c74393bea943d5a62b8b276707e1d87d0ee9c867"
    },
    {
      "members": [],
      "class_hash": "0x67d8a9dbcacadc1da6bd0d2242c9a9b1ee88e87e150a18edf3cce5fe028aaaa",
      "tag": "blockopoly-Property",
      "selector": "0xad1641d30c64dd5add519d0742fd175905d0e1ae380a46fbfbdccdc849f6f0"
    },
    {
      "members": [],
      "class_hash": "0x760bd74c925068cb099f58a58dc04d2b7d155a90c7c8e5a45d8ece1ce4e1129",
      "tag": "blockopoly-PropertyToId",
      "selector": "0x4b1f408c22e46123b6bc0b4f0bc8216a73114a9bf91f3c66285ea48fded9665"
    },
    {
      "members": [],
      "class_hash": "0x76edf03c6cc7687322eeae81ea18e1c58e193633f8244464531e57c7968bb55",
      "tag": "blockopoly-TradeCounter",
      "selector": "0x83d22b052c2506c69e0582a67595b8a4be24f1cb009d9fa6ae1df5b6cfc925"
    },
    {
      "members": [],
      "class_hash": "0xd0f459c6af34262ec3c0e13e59003f2ae2c550c6fcf44be597ef7ff913ae04",
      "tag": "blockopoly-TradeOfferDetails",
      "selector": "0x2fa4be64a95efeb79e079c4bc9d3a0ff7414074f45a1d31b778f2cdb1dc9680"
    },
    {
      "members": [],
      "class_hash": "0x31ee9713f7c2dc14d59b2c0d3851bf59367984210507f84a2a651964147bc06",
      "tag": "blockopoly-UsernameToAddress",
      "selector": "0x1834bb5c099a3756ee7ab30d8caf1e88f9634d1618766a3fc5eeeb09a9c69cf"
    }
  ],
  "events": [
    {
      "members": [],
      "class_hash": "0x13a757aa9b34b85f899a04bce94f87ac9f33c33f4c32bda8e22c39ac4203d1",
      "tag": "blockopoly-GameCreated",
      "selector": "0xe20cb2d00968c16cf4c28e9a353c7b6d09dd7e2a8a14cc62b06340180a0e35"
    },
    {
      "members": [],
      "class_hash": "0x535c7f42909893902fae4f35b14f30bb5d1de9e8992fc0d3e5f9fb4f960bb13",
      "tag": "blockopoly-GameStarted",
      "selector": "0x2a2f7db6c21a3e9c245954bbaf66bbf16759682fadf24b8275e0f3007d7b5ae"
    },
    {
      "members": [],
      "class_hash": "0x64099f257eac45ae460b80ffc1eb5968ff0a1460318f2807b038e8b57f6aab0",
      "tag": "blockopoly-PlayerCreated",
      "selector": "0x2b8204eeaa34104fb8841b87d3234db06f2bc0854afc1c09ed4f4ab6e479465"
    },
    {
      "members": [],
      "class_hash": "0x428c55a5dfeafa6b1a1c33d9f389c8af4ba4a26aaa78848325cde2a7a8ac8c3",
      "tag": "blockopoly-PlayerJoined",
      "selector": "0x70426ec38c35a4acb4dcb4dbc894ef2392a995dbd09c69a05383c304627d27b"
    }
  ],
  "external_contracts": []
}